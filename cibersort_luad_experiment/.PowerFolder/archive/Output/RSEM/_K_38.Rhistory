mypackages <- c("GSVA", "GSEABase", "Biobase", "genefilter",
"limma", "RColorBrewer", "scales", "dplyr")
lapply(mypackages, library, character.only = T)
.libPaths()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GSVA")
library(GSVA)
q()
q()
mypackages <- c("GSVA", "GSEABase", "Biobase", "genefilter",
"limma", "RColorBrewer", "scales", "dplyr")
lapply(mypackages, library, character.only = T)
source("C:/Users/Richard/Documents/R/R Local Projects/stunning-fiesta/R_scripts/Functions/functions.R")
# Import CIBERSORT Export Data
setwd("C:/Users/Richard/DataShare/cibersort_luad_experiment/Output/RSEM/")
# Import CIBERSORT Export Data
setwd("C:/Users/rbuch/DataShare/cibersort_luad_experiment/Output/RSEM/")
setwd("C:/Users/rbuch/DataShare/mutations_for_alignment/")
# Import CIBERSORT Export Data
setwd("C:/Users/rbuch/DataShare/cibersort_luad_experiment/Output/RSEM/")
df <- read.csv("CIBERSORT.Output_1000_permutations_rsem.csv", header = T)
setwd("C:/Users/rbuch/DataShare/mutations_for_alignment/")
detailed_mt <- read.csv("KRAS_STK11_plus_dbl_tidy_vs_other.csv", header = T)
View(detailed_mt)
# Re-name First column and Merge
colnames(df)[colnames(df)=="Input.Sample"] <- "Patient.ID"
output_merged <- merge(df, detailed_mt)
output)
output_merged
head(output_merged)
View(output_merged)
output_arranged <- arrange(output_merged, as.character(Mutation_Status))
?arrange()
library(dplyr)
install.packages("dplyr")
library(dplyr)
sessionInfo()
output_arranged <- arrange(output_merged, as.character(Mutation_Status))
View(output_arranged)
# Import CIBERSORT Export Data
setwd("C:/Users/rbuch/DataShare/cibersort_luad_experiment/Output/RSEM/Raw")
df2 <- read.csv("CIBERSORT.Output_1000_permutations_rsem.csv", header = T)
setwd("C:/Users/Richard/DataShare/cibersort_luad_experiment/Output/RSEM/")
setwd("C:/Users/rbuch/DataShare/cibersort_luad_experiment/Output/RSEM/")
write.csv(output_arranged, "cibersort_1000_permutations_output_merged.csv", row.names = F)
q()
options("rstudio.errors.suppressed"=FALSE)
q()

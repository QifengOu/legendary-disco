mypackages <- c("GSEABase", "GSVA", "Biobase", "genefilter",
"limma", "RColorBrewer", "GSVAdata", "scales", "dplyr")
lapply(mypackages, library, character.only = T)
source("C:/Users/Richard/Documents/R/R Local Projects/stunning-fiesta/R_scripts/Functions/functions.R")
# Import CIBERSORT Export Data
setwd("C:/Users/Richard/DataShare/cibersort_luad_experiment/Output/")
# Import CIBERSORT Export Data
setwd("C:/Users/Richard/DataShare/cibersort_luad_experiment/Output/RSEM/")
df <- read.csv("CIBERSORT.Output_1000_permutations_rsem.csv", header = T)
setwd("C:/Users/Richard/DataShare/mutations_for_alignment/")
detailed_mt <- read.csv("KRAS_STK11_plus_dbl_tidy_vs_other.csv", header = T)
View(df)
setwd("C:/Users/Richard/DataShare/mutations_for_alignment/")
detailed_mt <- read.csv("KRAS_STK11_plus_dbl_tidy_vs_other.csv", header = T)
# Transposed and merged
output_transposed <- as.data.frame(t(df))
View(df)
output_transposed <- rownames_to_column(output_transposed, var = "Input.Sample")
View(output_transposed)
rm(output_transposed)
df <- read.csv("CIBERSORT.Output_1000_permutations_rsem.csv", header = T)
# Import CIBERSORT Export Data
setwd("C:/Users/Richard/DataShare/cibersort_luad_experiment/Output/RSEM/")
df <- read.csv("CIBERSORT.Output_1000_permutations_rsem.csv", header = T)
# Transposed and merged
output_merged <- merge(df, detailed_mt)
View(output_merged)
df <- read.csv("CIBERSORT.Output_1000_permutations_rsem.csv", header = T)
View(df)
setwd("C:/Users/Richard/DataShare/mutations_for_alignment/")
detailed_mt <- read.csv("KRAS_STK11_plus_dbl_tidy_vs_other.csv", header = T)
# Re-name First column and Merge
colnames(df)[colnames(df)=="Input.Sample"] <- "Patient.ID"
head(df)
View(df)
rm(output_merged)
output_merged <- merge(df, detailed_mt)
View(output_merged)
output_arranged <- arrange(output_merged, as.character(Mutation_Status))
setwd("C:/Users/Richard/DataShare/MCP-Counter_luad_experiment/Output/")
setwd("C:/Users/Richard/DataShare/cibersort_luad_experiment/Output/")
setwd("C:/Users/Richard/DataShare/cibersort_luad_experiment/Output/RSEM/")
write.csv(output_arranged, "mcp_output_merged.csv", row.names = F)
write.csv(output_arranged, "cibersort_1000_permutations_output_merged.csv", row.names = F)
q()
